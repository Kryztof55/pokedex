import React, { useState, useEffect } from "react";
import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/home.module.scss";
import Card from "@/components/Card";
import Logo from "@/public/logo.webp";
import { getGenerationPage } from "@/utils/axios";
import { useQuery } from "react-query";
import InputSearch from "@/components/InputSearch";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [generation, setGeneration] = useState("1");
  const [numElements, setNumElements] = useState(9);
  const [pokemones, setPokemones] = useState([]);
  const increment = 9;

  const {
    isLoading,
    isError,
    error,
    data: pokes,
  } = useQuery(
    ["generation/", generation],
    () => getGenerationPage(generation),
    {
      keepPreviousData: true,
    }
  );

  useEffect(() => {
    setPokemones(pokes?.pokemon_species.slice(0, numElements));
  }, [isLoading, numElements]);

  //let elementsToShow = pokes?.pokemon_species.slice(0, numElements);

  useEffect(() => {
    handleScroll();
  }, []);

  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {
    let query = e.target.value.toLowerCase();
    let pokeFiltered: Pokemon[] = [];
    if (query.length > 3) {
      setPokemones(
        pokes?.pokemon_species.filter((el) => el.name.includes(query))
      );
    } else {
      setPokemones(pokes?.pokemon_species.slice(0, numElements));
      //elementsToShow = pokes?.pokemon_species.slice(0, numElements);
    }
  };

  const handleScroll = (): void => {
    const { scrollTop, clientHeight, scrollHeight } = document.documentElement;
    if (scrollTop + clientHeight >= scrollHeight) {
      setNumElements((prevNumElements) => prevNumElements + increment);
    }
    window.addEventListener("scroll", handleScroll);
    return () => {
      window.removeEventListener("scroll", handleScroll);
    };
  };

  return (
    <>
      <Head>
        <title>Pokédex King Tide Test</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className={styles.logoContainer}>
          <img className={styles.logo} src="/logo.webp" alt="Pokemon Name" />
        </div>
        <div className={styles.searchContainer}>
          <InputSearch
            onChange={(e) => handleSearch(e)}
            placeholder="Search Pokémon"
          />
        </div>
        <section className={styles.container}>
          {pokemones?.map((el, i) => {
            return <Card key={i} name={el.name} />;
          })}
        </section>
      </main>
    </>
  );
}
